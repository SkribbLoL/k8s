apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service-deployment
  labels:
    app: chat-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      containers:
      - name: chat-service
        image: veljkoskrbic/skribblol-chat-service:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        ports:
        - containerPort: 5002
        env:
        # Kubernetes/Helm Chart Configuration
        - name: REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: redis-password
        - name: RABBITMQ_HOST
          value: "rmq-rabbitmq.default.svc.cluster.local"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USERNAME
          value: "user"
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rmq-rabbitmq
              key: rabbitmq-password
        - name: RABBITMQ_URL
          value: "amqp://$(RABBITMQ_USERNAME):$(RABBITMQ_PASSWORD)@$(RABBITMQ_HOST):$(RABBITMQ_PORT)"
        
        # Docker Compose Configuration (commented out)
        # Uncomment below and comment above for Docker Compose usage
        # - name: REDIS_HOST
        #   value: "redis"
        # - name: REDIS_PORT
        #   value: "6379"
        # - name: RABBITMQ_URL
        #   value: "amqp://admin:password@rabbitmq:5672"